### Program:
l1 = true;

try{

 if(h1){

  throw;

 } else{

  skip;

 }

 l1 = false;

  } catch {

   skip;

 }

l2 = true;

try{

 if(h2){

  throw;

 } else{

  skip;

 }

 l2 = false;

  } catch {

   skip;

 }

l3 = true;

try{

 if(h3){

  throw;

 } else{

  skip;

 }

 l3 = false;

  } catch {

   skip;

 }

l4 = true;

try{

 if(h4){

  throw;

 } else{

  skip;

 }

 l4 = false;

  } catch {

   skip;

 }

l5 = true;

try{

 if(h5){

  throw;

 } else{

  skip;

 }

 l5 = false;

  } catch {

   skip;

 }

l6 = true;

try{

 if(h6){

  throw;

 } else{

  skip;

 }

 l6 = false;

  } catch {

   skip;

 }


### Output:

Parsing...
Typechecking...

*** Run 1: Initializing h[1-6] with secrets...
Executing...
Execution finished in 16 steps
Final (low) memory: 
   l1 = true
   l2 = false
   l3 = true
   l4 = false
   l5 = false
   l6 = false
Leak successful!

*** Run 2: Initializing h[1-6] with secrets...
Executing...
Execution finished in 15 steps
Final (low) memory: 
   l1 = true
   l2 = true
   l3 = false
   l4 = false
   l5 = true
   l6 = false
Leak successful!

Congrats, seems you've leaked the secret correctly. Code: graphite