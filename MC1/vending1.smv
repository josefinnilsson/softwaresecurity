MODULE main
VAR
  choice:  boolean;
  payment: boolean;
  acc_payment: boolean;
  n_items: 0..20;
  state:   { ready, expect_payment, dispense_item };

ASSIGN
  init (state) := ready;
  next (state) := case
		    state = ready          & choice & n_items>0:  expect_payment;
		    state = expect_payment & acc_payment: dispense_item;
        state = expect_payment & payment: expect_payment;
		    state = expect_payment & !choice: ready;
        state = dispense_item:	      ready;
		    TRUE:                             state;
  esac;

  init (acc_payment) := FALSE;
  next (acc_payment) := (state = expect_payment & payment);

  init (n_items) := 20;
  next (n_items) := case
        (n_items > 0 & state = dispense_item): (n_items - 1);
        TRUE:                           n_items;
  esac;
DEFINE
  release_item := (state = dispense_item);

LTLSPEC
  G(acc_payment -> F release_item) &
  G(n_items >= 0) &
  G(acc_payment -> n_items > 0) &
  G( state = dispense_item -> n_items = next(n_items) + 1);

  -- -> State: 1.1 <-
  --   choice = FALSE
  --   payment = FALSE
  --   acc_payment = FALSE
  --   state = ready
  --   release_item = FALSE
  -- -> State: 1.2 <-
  --   choice = TRUE
  -- -> State: 1.3 <-
  --   choice = FALSE
  --   payment = TRUE
  --   state = expect_payment
  -- -> State: 1.4 <- Here we go from expect_payment and getting payed back to the ready. Leading to the customer paying but not getting their item.
  --   payment = FALSE
  --   acc_payment = TRUE
  --   state = ready
  -- -- Loop starts here
  -- -> State: 1.5 <-
  --   acc_payment = FALSE
  -- -> State: 1.6 <-
